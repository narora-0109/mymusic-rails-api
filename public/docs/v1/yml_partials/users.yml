  /users:
    get:
      tags:
        - user
      summary: Finds all users
      description: Gets all users,paginated result.
      operationId: getAllUsers
      parameters:
        - in: query
          name: role
          description: Filter by role
          required: false
          type: string
          enum: ['user','admin','superadmin']
        - in: query
          name: id
          description: Filter by ids
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      security:
       - Authorization: []
      responses:
        "200":
          description: Successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
        "404":
          description: Not Found
        "401":
          description: Unauthorized
        "500":
          description: Server Error
        "400":
          description: Bad Request
    post:
      tags:
        - user
      summary: Add a new user
      description: Only Admins and SuperAdmins can create users
      operationId: addUser
      parameters:
        - in: body
          name: body
          description: User to add.You can also create playlists for this user if you are authorized.
          required: false
          schema:
            $ref: "#/definitions/User"
      security:
       - Authorization: []
      responses:
        "405":
          description: Invalid input
        "401":
          description: Unauthorized
        "400":
          description: Bad Request
  /users/{userId}:
    get:
      tags:
        - user
      summary: Find user by ID
      description: Returns a user
      operationId: getUserById
      parameters:
        - in: path
          name: userId
          description: ID of user that needs to be fetched
          required: true
          type: integer
          format: int64
      security:
       - Authorization: []
      responses:
        "404":
          description: user not found
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/User"
        "400":
          description: Invalid ID supplied
    put:
      tags:
        - user
      summary: Updates a user
      description: ""
      operationId: updateUser
      parameters:
        - in: path
          name: userId
          description: ID of user to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated attributes for user.
          required: false
          schema:
            $ref: "#/definitions/User"
      responses:
        "405":
          description: Invalid input
        "404":
          description: user not found
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/User"
        "400":
          description: Invalid ID supplied
      security:
        - Authorization: []
    delete:
      tags:
        - user
      summary: Deletes a user
      description: ""
      operationId: deleteUser
      parameters:
        - in: path
          name: userId
          description: user id to delete
          required: true
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid user value
        "204":
          description: No Content. Successfully Deleted.
        "404":
          description: User not found
      security:
        - Authorization: []








